.. Copyright 2016 The Cartographer Authors

.. Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

..      http://www.apache.org/licenses/LICENSE-2.0

.. Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

=============
Configuration
=============

.. DO NOT EDIT! This documentation is AUTOGENERATED, please edit .proto files as
.. needed and run scripts/update_configuration_doc.py.

cartographer.common.proto.CeresSolverOptions
============================================

bool use_nonmonotonic_steps
  Configure the Ceres solver. See the Ceres documentation for more
  information: https://code.google.com/p/ceres-solver/

int32 max_num_iterations
  Not yet documented.

int32 num_threads
  Not yet documented.


cartographer.mapping.pose_graph.proto.ConstraintBuilderOptions
==============================================================

double sampling_ratio
  A constraint will be added if the proportion of added constraints to
  potential constraints drops below this number.

double max_constraint_distance
  Threshold for poses to be considered near a submap.

double min_score
  Threshold for the scan match score below which a match is not considered.
  Low scores indicate that the scan and map do not look similar.

double global_localization_min_score
  Threshold below which global localizations are not trusted.

double loop_closure_translation_weight
  Weight used in the optimization problem for the translational component of
  loop closure constraints.

double loop_closure_rotation_weight
  Weight used in the optimization problem for the rotational component of
  loop closure constraints.

bool log_matches
  If enabled, logs information of loop-closing constraints for debugging.

cartographer.mapping_2d.scan_matching.proto.FastCorrelativeScanMatcherOptions fast_correlative_scan_matcher_options
  Options for the internally used scan matchers.

cartographer.mapping_2d.scan_matching.proto.CeresScanMatcherOptions ceres_scan_matcher_options
  Not yet documented.

cartographer.mapping_3d.scan_matching.proto.FastCorrelativeScanMatcherOptions fast_correlative_scan_matcher_options_3d
  Not yet documented.

cartographer.mapping_3d.scan_matching.proto.CeresScanMatcherOptions ceres_scan_matcher_options_3d
  Not yet documented.


cartographer.mapping.pose_graph.proto.OptimizationProblemOptions
================================================================

double huber_scale
  Scaling parameter for Huber loss function.

double acceleration_weight
  Scaling parameter for the IMU acceleration term.

double rotation_weight
  Scaling parameter for the IMU rotation term.

double local_slam_pose_translation_weight
  Scaling parameter for translation between consecutive nodes based on the local SLAM pose.

double local_slam_pose_rotation_weight
  Scaling parameter for rotation between consecutive nodes based on the local SLAM pose.

double odometry_translation_weight
  Scaling parameter for translation between consecutive nodes based on the odometry.

double odometry_rotation_weight
  Scaling parameter for rotation between consecutive nodes based on the odometry.

double fixed_frame_pose_translation_weight
  Scaling parameter for the FixedFramePose translation.

double fixed_frame_pose_rotation_weight
  Scaling parameter for the FixedFramePose rotation.

bool log_solver_summary
  If true, the Ceres solver summary will be logged for every optimization.

cartographer.common.proto.CeresSolverOptions ceres_solver_options
  Not yet documented.


cartographer.mapping.proto.MapBuilderOptions
============================================

bool use_trajectory_builder_2d
  Not yet documented.

bool use_trajectory_builder_3d
  Not yet documented.

int32 num_background_threads
  Number of threads to use for background computations.

cartographer.mapping.proto.PoseGraphOptions pose_graph_options
  Not yet documented.


cartographer.mapping.proto.MotionFilterOptions
==============================================

double max_time_seconds
  Threshold above which range data is inserted based on time.

double max_distance_meters
  Threshold above which range data is inserted based on linear motion.

double max_angle_radians
  Threshold above which range data is inserted based on rotational motion.


cartographer.mapping.proto.PoseGraphOptions
===========================================

int32 optimize_every_n_nodes
  Online loop closure: If positive, will run the loop closure while the map
  is built.

cartographer.mapping.pose_graph.proto.ConstraintBuilderOptions constraint_builder_options
  Options for the constraint builder.

double matcher_translation_weight
  Weight used in the optimization problem for the translational component of
  non-loop-closure scan matcher constraints.

double matcher_rotation_weight
  Weight used in the optimization problem for the rotational component of
  non-loop-closure scan matcher constraints.

cartographer.mapping.pose_graph.proto.OptimizationProblemOptions optimization_problem_options
  Options for the optimization problem.

int32 max_num_final_iterations
  Number of iterations to use in 'optimization_problem_options' for the final
  optimization.

double global_sampling_ratio
  Rate at which we sample a single trajectory's nodes for global
  localization.

bool log_residual_histograms
  Whether to output histograms for the pose residuals.

double global_constraint_search_after_n_seconds
  If for the duration specified by this option no global contraint has been
  added between two trajectories, loop closure searches will be performed
  globally rather than in a smaller search window.


cartographer.mapping.proto.TrajectoryBuilderOptions
===================================================

cartographer.mapping_2d.proto.LocalTrajectoryBuilderOptions trajectory_builder_2d_options
  Not yet documented.

cartographer.mapping_3d.proto.LocalTrajectoryBuilderOptions trajectory_builder_3d_options
  Not yet documented.

bool pure_localization
  Not yet documented.


cartographer.mapping_2d.proto.LocalTrajectoryBuilderOptions
===========================================================

float min_range
  Rangefinder points outside these ranges will be dropped.

float max_range
  Not yet documented.

float min_z
  Not yet documented.

float max_z
  Not yet documented.

float missing_data_ray_length
  Points beyond 'max_range' will be inserted with this length as empty space.

int32 num_accumulated_range_data
  Number of range data to accumulate into one unwarped, combined range data
  to use for scan matching.

float voxel_filter_size
  Voxel filter that gets applied to the range data immediately after
  cropping.

cartographer.sensor.proto.AdaptiveVoxelFilterOptions adaptive_voxel_filter_options
  Voxel filter used to compute a sparser point cloud for matching.

cartographer.sensor.proto.AdaptiveVoxelFilterOptions loop_closure_adaptive_voxel_filter_options
  Voxel filter used to compute a sparser point cloud for finding loop
  closures.

bool use_online_correlative_scan_matching
  Whether to solve the online scan matching first using the correlative scan
  matcher to generate a good starting point for Ceres.

cartographer.mapping_2d.scan_matching.proto.RealTimeCorrelativeScanMatcherOptions real_time_correlative_scan_matcher_options
  Not yet documented.

cartographer.mapping_2d.scan_matching.proto.CeresScanMatcherOptions ceres_scan_matcher_options
  Not yet documented.

cartographer.mapping.proto.MotionFilterOptions motion_filter_options
  Not yet documented.

double imu_gravity_time_constant
  Time constant in seconds for the orientation moving average based on
  observed gravity via the IMU. It should be chosen so that the error
  1. from acceleration measurements not due to gravity (which gets worse when
  the constant is reduced) and
  2. from integration of angular velocities (which gets worse when the
  constant is increased) is balanced.

cartographer.mapping_2d.proto.SubmapsOptions submaps_options
  Not yet documented.

bool use_imu_data
  True if IMU data should be expected and used.


cartographer.mapping_2d.proto.RangeDataInserterOptions
======================================================

double hit_probability
  Probability change for a hit (this will be converted to odds and therefore
  must be greater than 0.5).

double miss_probability
  Probability change for a miss (this will be converted to odds and therefore
  must be less than 0.5).

bool insert_free_space
  If 'false', free space will not change the probabilities in the occupancy
  grid.


cartographer.mapping_2d.proto.SubmapsOptions
============================================

double resolution
  Resolution of the map in meters.

int32 num_range_data
  Number of range data before adding a new submap. Each submap will get twice
  the number of range data inserted: First for initialization without being
  matched against, then while being matched.

cartographer.mapping_2d.proto.RangeDataInserterOptions range_data_inserter_options
  Not yet documented.


cartographer.mapping_2d.scan_matching.proto.CeresScanMatcherOptions
===================================================================

double occupied_space_weight
  Scaling parameters for each cost functor.

double translation_weight
  Not yet documented.

double rotation_weight
  Not yet documented.

cartographer.common.proto.CeresSolverOptions ceres_solver_options
  Configure the Ceres solver. See the Ceres documentation for more
  information: https://code.google.com/p/ceres-solver/


cartographer.mapping_2d.scan_matching.proto.FastCorrelativeScanMatcherOptions
=============================================================================

double linear_search_window
  Minimum linear search window in which the best possible scan alignment
  will be found.

double angular_search_window
  Minimum angular search window in which the best possible scan alignment
  will be found.

int32 branch_and_bound_depth
  Number of precomputed grids to use.


cartographer.mapping_2d.scan_matching.proto.RealTimeCorrelativeScanMatcherOptions
=================================================================================

double linear_search_window
  Minimum linear search window in which the best possible scan alignment
  will be found.

double angular_search_window
  Minimum angular search window in which the best possible scan alignment
  will be found.

double translation_delta_cost_weight
  Weights applied to each part of the score.

double rotation_delta_cost_weight
  Not yet documented.


cartographer.mapping_3d.proto.LocalTrajectoryBuilderOptions
===========================================================

float min_range
  Rangefinder points outside these ranges will be dropped.

float max_range
  Not yet documented.

int32 num_accumulated_range_data
  Number of range data to accumulate into one unwarped, combined range data
  to use for scan matching.

float voxel_filter_size
  Voxel filter that gets applied to the range data immediately after
  cropping.

cartographer.sensor.proto.AdaptiveVoxelFilterOptions high_resolution_adaptive_voxel_filter_options
  Voxel filter used to compute a sparser point cloud for matching.

cartographer.sensor.proto.AdaptiveVoxelFilterOptions low_resolution_adaptive_voxel_filter_options
  Not yet documented.

bool use_online_correlative_scan_matching
  Whether to solve the online scan matching first using the correlative scan
  matcher to generate a good starting point for Ceres.

cartographer.mapping_2d.scan_matching.proto.RealTimeCorrelativeScanMatcherOptions real_time_correlative_scan_matcher_options
  Not yet documented.

cartographer.mapping_3d.scan_matching.proto.CeresScanMatcherOptions ceres_scan_matcher_options
  Not yet documented.

cartographer.mapping.proto.MotionFilterOptions motion_filter_options
  Not yet documented.

double imu_gravity_time_constant
  Time constant in seconds for the orientation moving average based on
  observed gravity via the IMU. It should be chosen so that the error
  1. from acceleration measurements not due to gravity (which gets worse when
  the constant is reduced) and
  2. from integration of angular velocities (which gets worse when the
  constant is increased) is balanced.

int32 rotational_histogram_size
  Number of histogram buckets for the rotational scan matcher.

cartographer.mapping_3d.proto.SubmapsOptions submaps_options
  Not yet documented.


cartographer.mapping_3d.proto.RangeDataInserterOptions
======================================================

double hit_probability
  Probability change for a hit (this will be converted to odds and therefore
  must be greater than 0.5).

double miss_probability
  Probability change for a miss (this will be converted to odds and therefore
  must be less than 0.5).

int32 num_free_space_voxels
  Up to how many free space voxels are updated for scan matching.
  0 disables free space.


cartographer.mapping_3d.proto.SubmapsOptions
============================================

double high_resolution
  Resolution of the 'high_resolution' map in meters used for local SLAM and
  loop closure.

double high_resolution_max_range
  Maximum range to filter the point cloud to before insertion into the
  'high_resolution' map.

double low_resolution
  Resolution of the 'low_resolution' version of the map in meters used for
  local SLAM only.

int32 num_range_data
  Number of range data before adding a new submap. Each submap will get twice
  the number of range data inserted: First for initialization without being
  matched against, then while being matched.

cartographer.mapping_3d.proto.RangeDataInserterOptions range_data_inserter_options
  Not yet documented.


cartographer.mapping_3d.scan_matching.proto.CeresScanMatcherOptions
===================================================================

double occupied_space_weight
  Scaling parameters for each cost functor.

double translation_weight
  Not yet documented.

double rotation_weight
  Not yet documented.

bool only_optimize_yaw
  Whether only to allow changes to yaw, keeping roll/pitch constant.

cartographer.common.proto.CeresSolverOptions ceres_solver_options
  Configure the Ceres solver. See the Ceres documentation for more
  information: https://code.google.com/p/ceres-solver/


cartographer.mapping_3d.scan_matching.proto.FastCorrelativeScanMatcherOptions
=============================================================================

int32 branch_and_bound_depth
  Number of precomputed grids to use.

int32 full_resolution_depth
  Number of full resolution grids to use, additional grids will reduce the
  resolution by half each.

double min_rotational_score
  Minimum score for the rotational scan matcher.

double min_low_resolution_score
  Threshold for the score of the low resolution grid below which a match is
  not considered. Only used for 3D.

double linear_xy_search_window
  Linear search window in the plane orthogonal to gravity in which the best
  possible scan alignment will be found.

double linear_z_search_window
  Linear search window in the gravity direction in which the best possible
  scan alignment will be found.

double angular_search_window
  Minimum angular search window in which the best possible scan alignment
  will be found.


cartographer.sensor.proto.AdaptiveVoxelFilterOptions
====================================================

float max_length
  'max_length' of a voxel edge.

float min_num_points
  If there are more points and not at least 'min_num_points' remain, the
  voxel length is reduced trying to get this minimum number of points.

float max_range
  Points further away from the origin are removed.


=========================================
Lua configuration reference documentation
=========================================

Note that Cartographer's ROS integration uses `tf2`_, thus all frame IDs are
expected to contain only a frame name (lower-case with underscores) and no
prefix or slashes. See `REP 105`_ for commonly used coordinate frames.

Note that topic names are given as *base* names (see `ROS Names`_) in
Cartographer's ROS integration. This means it is up to the user of the
Cartographer node to remap, or put them into a namespace.

The following are Cartographer's ROS integration top-level options, all of which
must be specified in the Lua configuration file:

map_frame
  The ROS frame ID to use for publishing submaps, the parent frame of poses,
  usually "map".

tracking_frame
  The ROS frame ID of the frame that is tracked by the SLAM algorithm. If an IMU
  is used, it should be at its position, although it might be rotated. A common
  choice is "imu_link".

published_frame
  The ROS frame ID to use as the child frame for publishing poses. For example
  "odom" if an "odom" frame is supplied by a different part of the system. In
  this case the pose of "odom" in the *map_frame* will be published. Otherwise,
  setting it to "base_link" is likely appropriate.

odom_frame
  Only used if *provide_odom_frame* is true. The frame between *published_frame*
  and *map_frame* to be used for publishing the (non-loop-closed) local SLAM
  result. Usually "odom".

provide_odom_frame
  If enabled, the local, non-loop-closed, continuous pose will be published as
  the *odom_frame* in the *map_frame*.

publish_frame_projected_to_2d
  If enabled, the published pose will be restricted to a pure 2D pose (no roll,
  pitch, or z-offset). This prevents potentially unwanted out-of-plane poses in
  2D mode that can occur due to the pose extrapolation step (e.g. if the pose
  shall be published as a 'base-footprint'-like frame)

use_odometry
  If enabled, subscribes to `nav_msgs/Odometry`_ on the topic "odom". Odometry
  must be provided in this case, and the information will be included in SLAM.

use_nav_sat
  If enabled, subscribes to `sensor_msgs/NavSatFix`_ on the topic "fix".
  Navigation data must be provided in this case, and the information will be
  included in the global SLAM.

use_landmarks
  If enabled, subscribes to `cartographer_ros_msgs/LandmarkList`_ on the topic
  "landmarks".  Landmarks must be provided, as `cartographer_ros_msgs/LandmarkEntry`_ within `cartographer_ros_msgs/LandmarkList`_.  If `cartographer_ros_msgs/LandmarkEntry`_ data is provided the information
  will be included in the SLAM according to the ID of the `cartographer_ros_msgs/LandmarkEntry`_. The `cartographer_ros_msgs/LandmarkList`_ should be provided at a sample rate comparable to the other sensors.  The list can be empty but has to be provided because Cartographer strictly time orders sensor data in order to make the landmarks deterministic. However it is possible to set the trajectory builder option "collate_landmarks" to false and allow for a non-deterministic but also non-blocking approach.

num_laser_scans
  Number of laser scan topics to subscribe to. Subscribes to
  `sensor_msgs/LaserScan`_ on the "scan" topic for one laser scanner, or topics
  "scan_1", "scan_2", etc. for multiple laser scanners.

num_multi_echo_laser_scans
  Number of multi-echo laser scan topics to subscribe to. Subscribes to
  `sensor_msgs/MultiEchoLaserScan`_ on the "echoes" topic for one laser scanner,
  or topics "echoes_1", "echoes_2", etc. for multiple laser scanners.

num_subdivisions_per_laser_scan
  Number of point clouds to split each received (multi-echo) laser scan into.
  Subdividing a scan makes it possible to unwarp scans acquired while the
  scanners are moving. There is a corresponding trajectory builder option to
  accumulate the subdivided scans into a point cloud that will be used for scan
  matching.

num_point_clouds
  Number of point cloud topics to subscribe to. Subscribes to
  `sensor_msgs/PointCloud2`_ on the "points2" topic for one rangefinder, or
  topics "points2_1", "points2_2", etc. for multiple rangefinders.

lookup_transform_timeout_sec
  Timeout in seconds to use for looking up transforms using `tf2`_.

submap_publish_period_sec
  Interval in seconds at which to publish the submap poses, e.g. 0.3 seconds.

pose_publish_period_sec
  Interval in seconds at which to publish poses, e.g. 5e-3 for a frequency of
  200 Hz.

publish_to_tf
  Enable or disable providing of TF transforms.

publish_tracked_pose
  Enable publishing of tracked pose as a `geometry_msgs/PoseStamped`_ to topic "tracked_pose".

trajectory_publish_period_sec
  Interval in seconds at which to publish the trajectory markers, e.g. 30e-3
  for 30 milliseconds.

rangefinder_sampling_ratio
  Fixed ratio sampling for range finders messages.

odometry_sampling_ratio
  Fixed ratio sampling for odometry messages.

fixed_frame_sampling_ratio
  Fixed ratio sampling for fixed frame messages.

imu_sampling_ratio
  Fixed ratio sampling for IMU messages.

landmarks_sampling_ratio
  Fixed ratio sampling for landmarks messages.

.. _REP 105: http://www.ros.org/reps/rep-0105.html
.. _ROS Names: http://wiki.ros.org/Names
.. _geometry_msgs/PoseStamped: http://docs.ros.org/api/geometry_msgs/html/msg/PoseStamped.html
.. _nav_msgs/OccupancyGrid: http://docs.ros.org/api/nav_msgs/html/msg/OccupancyGrid.html
.. _nav_msgs/Odometry: http://docs.ros.org/api/nav_msgs/html/msg/Odometry.html
.. _sensor_msgs/LaserScan: http://docs.ros.org/api/sensor_msgs/html/msg/LaserScan.html
.. _sensor_msgs/MultiEchoLaserScan: http://docs.ros.org/api/sensor_msgs/html/msg/MultiEchoLaserScan.html
.. _sensor_msgs/PointCloud2: http://docs.ros.org/api/sensor_msgs/html/msg/PointCloud2.html
.. _sensor_msgs/NavSatFix: http://docs.ros.org/api/sensor_msgs/html/msg/NavSatFix.html
.. _cartographer_ros_msgs/LandmarkList: https://github.com/cartographer-project/cartographer_ros/blob/master/cartographer_ros_msgs/msg/LandmarkList.msg
.. _cartographer_ros_msgs/LandmarkEntry: https://github.com/cartographer-project/cartographer_ros/blob/4b39ee68c7a4d518bf8d01a509331e2bc1f514a0/cartographer_ros_msgs/msg/LandmarkEntry.msg
.. _tf2: http://wiki.ros.org/tf2
